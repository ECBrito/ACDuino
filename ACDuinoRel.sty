\documentclass[12pt]{article}
\usepackage[a4paper,margin=1in]{geometry}
\usepackage{graphicx}
\usepackage{listings}
\usepackage{xcolor}
\usepackage{float} % Para usar [H] com figuras

% Configuração do código fonte
\lstdefinestyle{arduinoStyle}{
  language=C++,
  basicstyle=\ttfamily\footnotesize,
  keywordstyle=\color{blue},
  commentstyle=\color{gray},
  stringstyle=\color{red},
  breaklines=true,
  frame=single
}

\title{Automated Car Air Conditioning Control Using Arduino "ACDuino"}
\author{Edgar Brito}
\date{\today}

\begin{document}

\maketitle

\begin{abstract}
This article presents an innovative and efficient approach to the automated control of a vehicle's air conditioning system using an Arduino-based platform. The developed solution integrates pressure sensors, temperature probes, and relay modules to continuously monitor the thermal and pressure conditions within the refrigeration circuit. Based on real-time data, the system autonomously determines the optimal moments to activate or deactivate the fan and compressor, ensuring optimized and efficient operation. The system was subjected to rigorous testing under real conditions, demonstrating consistent and highly efficient performance. The results show that the proposed solution is a viable, low-cost, and technologically advanced alternative capable of optimizing vehicle climate control with efficiency and reliability.
\end{abstract}

\section{Introduction}
This article presents an innovative and efficient approach to the automated control of a vehicle's air conditioning system using an Arduino-based platform. The developed solution integrates pressure sensors, temperature probes, and relay modules to continuously monitor the thermal and pressure conditions within the refrigeration circuit. Based on real-time data, the system autonomously determines the optimal moments to activate or deactivate the fan and compressor, ensuring optimized and efficient operation.

In addition to providing more precise and adaptable control to the environment, this implementation stands out for its low cost and simplicity of integration, making it a viable alternative to conventional solutions. The project aims not only to improve thermal comfort inside the vehicle but also to contribute to energy efficiency by reducing unnecessary component wear and minimizing energy consumption. This approach represents a significant advancement in the modernization of automotive climate control, being applicable both to older vehicles that lack advanced electronic systems and to projects for optimizing climate control in customized vehicles.

\newpage

\section{Materials and Methods}
The project consists of the following components:
\begin{itemize}
    \item \textbf{Arduino Uno}: The central microcontroller used to process data from sensors and control the relay module.
    \item \textbf{Pressure sensor (0-500 PSI, 0-5V output)}: Measures the pressure within the air conditioning system to ensure optimal performance and safety.
    \item \textbf{Temperature probe (OneWire DS18B20)}: Provides accurate temperature readings, allowing the system to adjust the air conditioning based on real-time conditions.
    \item \textbf{Relay module for fan and compressor control}: Acts as a switch to turn the fan and compressor on or off based on the data received from the sensors.
    \item \textbf{Power supply and wiring}: Supplies the necessary power to the Arduino and other components, ensuring stable and reliable operation.
\end{itemize}

\subsection{Circuit Diagram}
A simplified schematic of the circuit is presented in Figure \ref{fig:circuit}.

% Example of inserting an image
\begin{figure}[H]
    \centering
    \includegraphics[width=0.8\textwidth]{circuit.png} % Replace with actual image file
    \caption{Circuit diagram of the system.}
    \label{fig:circuit}
\end{figure}

\subsection{Arduino Code}
Below is a snippet of the main control logic implemented in Arduino:

\begin{lstlisting}[style=arduinoStyle, caption=Arduino Code for Sensor and Relay Control]
#include <OneWire.h>

// Configuração dos pinos
int SensorPressaoPin = A0; // Pino analógico para o Sensor Pressão
int releVentoinhaPin = 7;   // Pino digital para o Relé 1/Ventoinha
int releCompressorPin = 8;   // Pino digital para o Relé 2/Compressor

OneWire ds(10);  // on pin 10 (a 4.7K resistor is necessary)

bool compressorDesligadoPorTemperatura = false;

void setup() {
  // Configura os pinos dos sensores como entrada
  pinMode(releVentoinhaPin, INPUT);
  pinMode(releCompressorPin, INPUT);

  // Configura os pinos dos relés como saída
  pinMode(releVentoinhaPin, OUTPUT);
  pinMode(releCompressorPin, OUTPUT);

  // Inicializa os relés desligados
  digitalWrite(releVentoinhaPin, LOW);
  digitalWrite(releCompressorPin, LOW);

  // Inicializa o monitor serial
  Serial.begin(9600);
  Serial.println("Sistema iniciado. Monitorando sensores...");
}

void loop() {
  // Lê os valores dos sensores
  int sensorPressaoValue = analogRead(SensorPressaoPin); // Valor do Sensor de Pressão (0 a 1023)

  // Sensor Temperatura
  byte data[9];
  byte addr[8];
  float celsius;

  if (!ds.search(addr)) {
    ds.reset_search();
    delay(250);
    Serial.println("Nenhum sensor de temperatura detectado.");
    return;
  }

  ds.reset();
  ds.select(addr);
  ds.write(0x44, 1); // start conversion
  delay(750); // wait for conversion

  ds.reset();
  ds.select(addr);
  ds.write(0xBE); // read scratchpad

  for (int i = 0; i < 9; i++) {
    data[i] = ds.read();
  }

  int16_t raw = (data[1] << 8) | data[0];
  celsius = (float)raw / 16.0;

  // Converte os valores para tensão (0 a 5V)
  float voltagePressao = sensorPressaoValue * (5.0 / 1023.0);
  float pressaoPSI = voltagePressao * 100; // Supondo que 0-5V representa 0-500 PSI
  float pressaoBar = pressaoPSI * 0.0689476; // Conversão de PSI para bar

  Serial.println("------------------------");
  Serial.print("Temperature: ");
  Serial.print(celsius);
  Serial.println(" °C");

  Serial.print("Pressão: ");
  Serial.print(pressaoBar);
  Serial.println(" bar");

  // Condições para acionar os relés
  if (celsius <= 3) {
    compressorDesligadoPorTemperatura = true;
  } else if (celsius >= 10) {
    compressorDesligadoPorTemperatura = false;
  }

  if (pressaoBar > 2 && pressaoBar < 30 && celsius > 1 && !compressorDesligadoPorTemperatura) {
    digitalWrite(releVentoinhaPin, HIGH);
    digitalWrite(releCompressorPin, HIGH);
    Serial.println("Relés ATIVADOS: Ventoinha e Compressor ligados.");
  } else {
    digitalWrite(releVentoinhaPin, LOW);
    digitalWrite(releCompressorPin, LOW);
    Serial.println("Relés DESATIVADOS: Ventoinha e Compressor desligados.");
  }

  // Aguarda 500ms antes de repetir
  delay(500);
}
\end{lstlisting}

\newpage

\section{Results and Discussion}
The system successfully monitors pressure and temperature, activating the air conditioning components under predefined conditions. The implementation demonstrates a practical application of embedded systems in automotive automation. The system ensures that the evaporator remains within the efficient temperature range, providing optimal cooling performance. By continuously adjusting the fan and compressor based on real-time data, the system maintains a stable and comfortable environment inside the vehicle. This not only enhances passenger comfort but also improves energy efficiency by preventing unnecessary operation of the air conditioning components. The rigorous testing under real conditions demonstrated the system's reliability and effectiveness in various scenarios, including intentional sensor failures and abrupt pressure changes. The results show that the proposed solution is a viable, low-cost, and technologically advanced alternative capable of optimizing vehicle climate control with efficiency and reliability.


\section{Conclusion} This project demonstrates a significant advancement in the automated control of vehicle air conditioning systems using an Arduino-based platform. By integrating pressure sensors, temperature probes, and relay modules, the system effectively monitors and regulates the thermal and pressure conditions within the refrigeration circuit. The rigorous testing under real conditions has validated the system's reliability, efficiency, and responsiveness to various scenarios, including sensor failures and abrupt pressure changes. The ability to maintain the evaporator within the optimal temperature range ensures enhanced cooling performance and energy efficiency. This innovative solution not only improves passenger comfort but also reduces unnecessary component wear and energy consumption. The proposed system is a viable, low-cost, and technologically advanced alternative to conventional climate control solutions, making it suitable for both older vehicles and customized automotive projects. Future work may focus on integrating wireless communication for remote monitoring and control, further enhancing the system's capabilities and user experience.



\end{document}
